/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

        1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

         1: 1
         3: 1,3
         6: 1,2,3,6
        10: 1,2,5,10
        15: 1,3,5,15
        21: 1,3,7,21
        28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/

import org.scalatest.FreeSpec

import scala.annotation.tailrec

class p012_HighlyDivisibleTriangularNumber_Spec extends FreeSpec {

  "The solution is correct" in {
    val x = (BigInt(1) to BigInt(500)).product
    assert(x == 500L)

    @tailrec
    def loop(i: Int, sum: Int): Int = {
      if (Util.factors(sum).length > 30)
        sum
      else
        loop(i + 1, sum + i + 1)
    }

    val ans = loop(1, 1)
    assert(ans == 70600674)
  }
}
